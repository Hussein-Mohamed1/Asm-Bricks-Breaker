.MODEL SMALL
.STACK 100H
.DATA
    BALL_X_INITIAL_POS DW 0AH
    BALL_Y_INITIAL_POS DW 0AH
    BALL_X DW 0AH
    BALL_Y DW 0AH
    BALL_SIZE DW 04H; 4x4

    BALL_X_VELOCITY DW 5H
    BALL_Y_VELOCITY DW 2H

    WINDOW_HEIGHT DW 200
    WINDOW_WIDTH DW 320
    WINDOW_BOUNDS DW 6; To Check Boundaries Early

    BALL_CENTER_X DW 110
    BALL_CENTER_Y DW 160

    AUX_TIME DB 0
.CODE

    INIT_GRAPHICS_MODE PROC FAR
        MOV AX, 13H
        INT 10H
        RET
    INIT_GRAPHICS_MODE ENDP

    SET_BACK_GROUND_CLR PROC FAR
        MOV AH, 0BH
        MOV BX, 00H
        INT 10H
        RET
    SET_BACK_GROUND_CLR ENDP

    DRAW_BALL PROC FAR
        MOV CX, BALL_X
        MOV DX, BALL_Y
        MOV AL, 04H; WHITE COLOR
        MOV AH, 0CH
        MOV BH, 0

    DRAW_BALL_LOOP:
        INT 10H
        INC CX
        ;SI IS TEMP TO COMPARE WITH BALL_Y + BALL_SIZE
        MOV SI, BALL_X
        ADD SI, BALL_SIZE
        CMP CX, SI
        JNE DRAW_BALL_LOOP

        INC DX
        MOV CX, BALL_X

        MOV SI, BALL_Y
        ADD SI, BALL_SIZE

        CMP DX, SI
        JNE DRAW_BALL_LOOP

        RET
    DRAW_BALL ENDP

MOVE_BALL_BY_VELOCITY PROC FAR
    MOV AX, BALL_X_VELOCITY
    ADD BALL_X, AX
    
    ;ball_x < 0 or ball_x > window_width  - BALL_SIZE
    MOV AX, WINDOW_BOUNDS
    CMP BALL_X, AX
    JL NEG_VEL_X

    MOV AX, WINDOW_WIDTH
    SUB AX, WINDOW_BOUNDS
    CMP BALL_X, AX
    JG NEG_VEL_X



    MOV AX, BALL_Y_VELOCITY
    ADD BALL_Y, AX

    MOV AX, WINDOW_BOUNDS
    CMP BALL_Y, AX
    JL NEG_VEL_Y

    MOV AX, WINDOW_HEIGHT
    SUB AX, WINDOW_BOUNDS
    CMP BALL_Y, AX
    JG NEG_VEL_Y

    RET

NEG_VEL_X:
    NEG BALL_X_VELOCITY
    RET

NEG_VEL_Y:
    NEG BALL_Y_VELOCITY
    RET

MOVE_BALL_BY_VELOCITY ENDP


; RESET_BALL PROC FAR
;     MOV BALL_X, BALL_X_INITIAL_POS
;     MOV BALL_Y, BALL_Y_INITIAL_POS
;     RET
; RESET_BALL ENDP


MAIN PROC FAR

    MOV AX, @DATA
    MOV DS, AX

    CALL INIT_GRAPHICS_MODE
    CALL SET_BACK_GROUND_CLR


    ;GET TIME CH Hours, CL Minutes, DH Seconds, DL Hundreths of a second
    CHECK_TIME:
        MOV AH, 2CH
        INT 21H
    
        CMP DL, AUX_TIME
        JE CHECK_TIME
    
        MOV AUX_TIME, DL

        CALL INIT_GRAPHICS_MODE
        CALL MOVE_BALL_BY_VELOCITY
        CALL DRAW_BALL
    
        JMP CHECK_TIME


    HLT
MAIN ENDP
END MAIN

